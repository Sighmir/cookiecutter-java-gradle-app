plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // Apply SonarQube plugin to add code quality analisys
    id "org.sonarqube" version "2.8"

    // Apply JaCoCo to add test coverage analisys
    id 'jacoco'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // Use Mockito for test mocking
    testImplementation 'org.mockito:mockito-core:2.22.0'
}

application {
    // Define the main class for the application.
    mainClassName = '{{ cookiecutter.repo_name }}.App'
}

jar {
    manifest {
        attributes 'Main-Class': '{{ cookiecutter.repo_name }}.App'
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "{{ cookiecutter.repo_name }}"
        property "sonar.organization", "{{ cookiecutter.repo_author }}"
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled = true
        html.enabled = true
    }
}